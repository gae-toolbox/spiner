#!/usr/bin/env python
"""Test runner

Usage example:

    ./bin/runtests tests/subdir
    ./bin/runtests tests/subdir/concratetestcase.py
    ./bin/runtests --coverage-html --open
"""
import argparse
import sys
import os
import unittest
from os.path import dirname, abspath, isdir

HELP_PYTHONPATH = """
Add Google App Engine SDK to you PYTHONPATH before you will run this task.
eg.: export PYTHONPATH=$PYTHONPATH:/usr/local/google_appengine
"""

parser = argparse.ArgumentParser(description='Runs unit tests.')

parser.add_argument(
    'path',
    help='Directory or concrate test case to start discovery',
    nargs='?',
    default='app/tests'
    )

parser.add_argument(
    '--coverage-html',
    help='Generate HTML Report',
    action='store_true',
    )

parser.add_argument(
    '--coverage-txt',
    help='Generate plain text report',
    action='store_true',
    )

parser.add_argument(
    '--open',
    help='Open report via default open command',
    action='store_true'
    )

args = parser.parse_args()


class Error(Exception):
    pass


if __name__ == '__main__':
    try:
        path = args.path
        if not os.path.exists(path):
            raise Error("Directory '{}' doesn't exists".format(path))

        # add parent diretory to python path
        # to be able to import modules from it
        sys.path.insert(
            0, dirname(dirname(abspath(__file__))))

        try:
            # Ensure that the google.appengine.* packages are available
            # in tests as well as all bundled third-party packages.
            import dev_appserver
            dev_appserver.fix_sys_path()
        except ImportError as e:
            raise Error(e.message + HELP_PYTHONPATH)

        # Loading appengine_config from the current project ensures that any
        # changes to configuration there are available to all tests (e.g.
        # sys.path modifications, namespaces, etc.)
        import appengine_config
        (appengine_config)

        if isdir(path):
            start_dir = path
            pattern = '*.py'
        else:
            start_dir = dirname(path)
            pattern = path.replace(start_dir, '', 1).strip('/')

        # Discover and run tests.
        suite = unittest.loader.TestLoader().discover(start_dir, pattern)
        unittest.TextTestRunner(verbosity=2).run(suite)
        if args.coverage_txt:
            os.system('coverage report -m')
        if args.coverage_html:
            os.system('coverage html')
        if args.open:
            os.system('open .coverage_html/index.html')
    except Error as e:
        print 'ERROR: ' + e.message
        exit(-1)
